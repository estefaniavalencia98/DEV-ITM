@page "/myorders"
@attribute [Authorize]
@inject HttpClient HttpClient
@inject OrderState OrderState
@inject OrdersClient OrdersClient

<PageTitle>Blazing Pizza - My Orders</PageTitle>

<div class="main">
    <div class="list-group orders-list">
        @foreach (var item in ordersWithStatus)
        {
            <div class="list-group-item">
                <div class="col">
                    <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                    Items:
                    <strong>@item.Order.Pizzas.Count()</strong>;
                    Total price:
                    <strong>£@item.Order.GetFormattedTotalPrice()</strong>
                </div>
                <div class="col">
                    Status: <strong>@item.StatusText</strong>
                </div>
                <div class="col flex-grow-0">
                    <a href="myorders/@item.Order.OrderId" class="btn btn-success">
                        Track &gt;
                    </a>
                </div>
            </div>
        }
    </div>

</div>

@code {
    IEnumerable<OrderWithStatus>? ordersWithStatus;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            ordersWithStatus = await OrdersClient.GetOrders();
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
    }
}